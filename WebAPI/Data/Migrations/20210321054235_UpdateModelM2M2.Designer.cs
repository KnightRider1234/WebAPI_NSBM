// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Data;

namespace WebAPI.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210321054235_UpdateModelM2M2")]
    partial class UpdateModelM2M2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAPI.Models.CitizenLocations", b =>
                {
                    b.Property<int>("CitizenId")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.HasKey("CitizenId", "LocationId");

                    b.HasIndex("LocationId");

                    b.ToTable("CitizenLocations");
                });

            modelBuilder.Entity("WebAPI.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CitizenLocationsId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Latitude")
                        .HasPrecision(18, 15)
                        .HasColumnType("decimal(18,15)");

                    b.Property<string>("LocName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Longitude")
                        .HasPrecision(18, 15)
                        .HasColumnType("decimal(18,15)");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("WebAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebAPI.Models.Citizen", b =>
                {
                    b.HasBaseType("WebAPI.Models.User");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CitizenLocationsId")
                        .HasColumnType("int");

                    b.Property<int>("HealthStatus")
                        .HasColumnType("int");

                    b.Property<int>("Telephone")
                        .HasColumnType("int");

                    b.ToTable("Citizens");
                });

            modelBuilder.Entity("WebAPI.Models.PHI", b =>
                {
                    b.HasBaseType("WebAPI.Models.User");

                    b.ToTable("PHIs");
                });

            modelBuilder.Entity("WebAPI.Models.CitizenLocations", b =>
                {
                    b.HasOne("WebAPI.Models.Citizen", "Citizen")
                        .WithMany("CitizenLocations")
                        .HasForeignKey("CitizenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.Location", "Location")
                        .WithMany("CitizenLocations")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Citizen");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("WebAPI.Models.Citizen", b =>
                {
                    b.HasOne("WebAPI.Models.User", null)
                        .WithOne()
                        .HasForeignKey("WebAPI.Models.Citizen", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebAPI.Models.PHI", b =>
                {
                    b.HasOne("WebAPI.Models.User", null)
                        .WithOne()
                        .HasForeignKey("WebAPI.Models.PHI", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebAPI.Models.Location", b =>
                {
                    b.Navigation("CitizenLocations");
                });

            modelBuilder.Entity("WebAPI.Models.Citizen", b =>
                {
                    b.Navigation("CitizenLocations");
                });
#pragma warning restore 612, 618
        }
    }
}
